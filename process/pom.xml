<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.telflow</groupId>
    <artifactId>training</artifactId>
    <version>${revision}${changelist}</version>
  </parent>

  <groupId>com.telflow.process</groupId>
  <artifactId>training-process</artifactId>

  <packaging>bundle</packaging>

  <name>Telflow Training :: Provisioning Processes</name>
  <description>Telflow Training Process Bundle</description>

  <properties>
    <activiti.version>5.21.0.dgit-fix-10</activiti.version>
    <groovy.version>1.8.9</groovy.version>
    <h2.version>1.4.193</h2.version>
    <sourcePath>/src/main/root</sourcePath>
    <component.name>telflow-process</component.name>
    <app.name>telflow-training-process</app.name>
    <child.root.name>child-root</child.root.name>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.activiti</groupId>
      <artifactId>activiti-engine</artifactId>
      <version>${activiti.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <version>${groovy.version}</version>
    </dependency>
    <dependency>
      <groupId>com.telflow.cim</groupId>
      <artifactId>cim</artifactId>
      <version>${telflow.cim.version}</version>
    </dependency>
    <dependency>
      <groupId>com.telflow.process</groupId>
      <artifactId>core</artifactId>
      <version>${telflow.process.version}</version>
    </dependency>
    <dependency>
      <groupId>com.telflow.process</groupId>
      <artifactId>process-test</artifactId>
      <version>${telflow.process.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-http4</artifactId>
      <version>${camel.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${log4j12.version}</version>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
      <version>${osgi.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>${project.build.directory}/generated-resources</directory>
      </resource>
    </resources>
    <plugins>
      <!-- Compiler Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.version}</version>
      </plugin>
      <!-- Maven Bundle Plugin -->
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>${maven.bundle.version}</version>
        <extensions>true</extensions>
        <configuration>
          <buildDirectory>${docker.build.dir}</buildDirectory>
          <instructions>
            <Bundle-Name>Telflow Process :: ${project.name}</Bundle-Name>
            <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
            <Implementation-Title>Telflow Process :: ${project.name}</Implementation-Title>
            <Bundle-Activator>org.activiti.osgi.Activator</Bundle-Activator>
            <Implementation-Version>${project.version}</Implementation-Version>
            <Import-Package>org.slf4j; provider=paxlogging;resolution:=optional,*</Import-Package>
            <Dynamic-Import>*</Dynamic-Import>
          </instructions>
        </configuration>
      </plugin>
      <!-- Maven Resource Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copyProjectFiles</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${docker.build.dir}/${child.root.name}</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.basedir}/${sourcePath}</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-resources</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/generated-resources/OSGI-INF/activiti</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/main/process/product</directory>
                  <filtering>false</filtering>
                </resource>
                <resource>
                  <directory>${project.basedir}/src/main/process/callActivity</directory>
                  <filtering>false</filtering>
                </resource>
                <resource>
                  <directory>${project.basedir}/src/main/process/goBackPlugin</directory>
                  <filtering>false</filtering>
                </resource>
                <resource>
                  <directory>${project.basedir}/src/main/process/integration</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Add process diagrams to test classpath -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
        <configuration>
          <trimStackTrace>false</trimStackTrace>
          <additionalClasspathElements>
            <additionalClasspathElement>${basedir}/src/main/process/</additionalClasspathElement>
          </additionalClasspathElements>
          <systemProperties>
            <property>
              <name>java.awt.headless</name>
              <value>true</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      <!-- Groovy Compiler -->
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
      </plugin>
      <!-- Docker Plugin -->
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker.maven.plugin.version}</version>
        <configuration>
          <verbose>true</verbose>
          <images>
            <image>
              <name>${docker.registry}/${app.name}:${docker.preciseVersion}</name>
              <build>
                <dockerFile>${docker.build.dir}/Dockerfile</dockerFile>
                <contextDir>${docker.build.dir}</contextDir>
                <tags>
                  <tag>latest</tag>
                  <tag>${docker.currentVersion}</tag>
                </tags>
              </build>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>buildDockerImage</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Build helper plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
      <!-- Build number plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
</project>

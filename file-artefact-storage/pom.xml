<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.telflow</groupId>
    <artifactId>training</artifactId>
    <version>${revision}${changelist}</version>
  </parent>

  <groupId>com.telflow.training</groupId>
  <name>Telflow Training File Artefact Provider</name>

  <packaging>bundle</packaging>
  <artifactId>file-artefact-provider</artifactId>
  
  <properties>
    <!-- Distribution Management URLS -->
    
    <dist.id>nexus</dist.id>
    <repo.release>https://nexus.office.dgit.biz:8443/nexus/content/repositories/dgit-maven-releases</repo.release>
    <repo.snapshot>https://nexus.office.dgit.biz:8443/nexus/content/repositories/dgit-maven-snapshots</repo.snapshot>
    <dist.release>${repo.release}</dist.release>
    <dist.snapshot>${repo.snapshot}</dist.snapshot>
    
    <bundle.import.package>
    javax.xml.bind;version="[2,3)",
    javax.xml.bind.annotation;version="[2,3)",
    </bundle.import.package>
    
    <!-- Docker -->
    <sourcePath>/src/main/root</sourcePath>
    <component.name>artefact</component.name>
    <app.name>telflow-training-artefact</app.name>
    <consul.dir>consul-template</consul.dir>
    <assembly.name>${app.name}-${docker.longVersion}</assembly.name>
    <child.root.name>child-root</child.root.name>
    <consul.template.path>/etc/consul-template/templates</consul.template.path>
    <consul.conf.docker>/etc/consul-template/conf/docker</consul.conf.docker>
    <karaf.home>/opt/telflow/artefact</karaf.home>
  </properties>

  <scm>
    <connection>scm:git:git://localhost/${basedir}</connection>
  </scm>

  <dependencies>
    <dependency>
      <groupId>com.telflow.artefact</groupId>
      <artifactId>artefact-api</artifactId>
      <version>${telflow.artefact.version}</version>
    </dependency>
    <dependency>
      <groupId>com.telflow.cim.converter</groupId>
      <artifactId>camel</artifactId>
      <version>${telflow.cim.converter.version}</version>
    </dependency>
    <dependency>
      <groupId>com.telflow.artefact</groupId>
      <artifactId>artefact-postgres-provider</artifactId>
      <version>${telflow.artefact.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxws</artifactId>
      <version>3.3.7</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http</artifactId>
      <version>3.3.7</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <version>${groovy.version}</version>
    </dependency>
    <dependency>
      <groupId>com.telflow.fabric.test</groupId>
      <artifactId>fabric-test</artifactId>
      <version>${telflow.fabric.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>${maven.bundle.version}</version>
        <extensions>true</extensions>
        <configuration>
          <buildDirectory>${docker.build.dir}</buildDirectory>
          <instructions>
            <Bundle-ClassPath>.</Bundle-ClassPath>
            <Bundle-SymbolicName>${bundle.symbolic.name}</Bundle-SymbolicName>
            <Import-Package>${bundle.import.package},*</Import-Package>
            <Export-Package>${bundle.export.package}</Export-Package>
            <Telflow-ChangeSet>${buildNumber}</Telflow-ChangeSet>
          </instructions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy reference fabric docker files</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${docker.build.dir}</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/main/docker</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
              <escapeString>\</escapeString>
            </configuration>
          </execution>
          <execution>
            <id>copy consul templates</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${docker.build.dir}/${consul.dir}</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/main/consul-template</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker.maven.plugin.version}</version>
        <configuration>
          <verbose>true</verbose>
          <images>
            <image>
              <name>${docker.registry}/${app.name}:${docker.preciseVersion}</name>
              <build>
                <dockerFile>${docker.build.dir}/Dockerfile</dockerFile>
                <contextDir>${docker.build.dir}</contextDir>
                <tags>
                  <tag>latest</tag>
                  <tag>${docker.currentVersion}</tag>
                </tags>
              </build>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>buildDockerImage</id>
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
</project>
